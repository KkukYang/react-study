[{"/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/index.js":"1","/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/UpdateContent.js":"2","/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/CreateContent.js":"3","/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/TOC.js":"4","/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/App.js":"5","/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/Control.js":"6","/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/Subject.js":"7","/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/App2.js":"8","/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/ReadContent.js":"9"},{"size":509,"mtime":1609614524716,"results":"10","hashOfConfig":"11"},{"size":2720,"mtime":1609780920819,"results":"12","hashOfConfig":"11"},{"size":1243,"mtime":1609780645108,"results":"13","hashOfConfig":"11"},{"size":1864,"mtime":1609687925512,"results":"14","hashOfConfig":"11"},{"size":8619,"mtime":1609782716838,"results":"15","hashOfConfig":"11"},{"size":960,"mtime":1609664854533,"results":"16","hashOfConfig":"11"},{"size":474,"mtime":1609658759347,"results":"17","hashOfConfig":"11"},{"size":7385,"mtime":1609960326362,"results":"18","hashOfConfig":"11"},{"size":281,"mtime":1609665069808,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cue3h9",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/index.js",[],"/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/UpdateContent.js",[],"/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/CreateContent.js",[],"/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/TOC.js",[],"/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/App.js",["39","40"],"import React, {Component} from 'react';\nimport TOC from \"./component/TOC\"\nimport ReadContent from \"./component/ReadContent\"\nimport Subject from \"./component/Subject\"\nimport Control from \"./component/Control\"\nimport './App.css';\nimport CreateContent from \"./component/CreateContent\";\nimport UpdateContent from \"./component/UpdateContent\";\n\n//CRUD 예제 메인.\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.max_content_id = 3;\n\n        this.state = {\n            mode: \"welcome\",\n            selected_content_id: 2,\n            welcome: {title: \"Welcome\", desc: \"Hello, React!!!\"},\n            subject: {\n                title: \"WEB by title\",\n                sub: \"world wide web!!! by sub\",\n            },\n            contents: [\n                {id: 1, title: \"HTML\", desc: \"HTML is for information\"},\n                {id: 2, title: \"CSS\", desc: \"CSS is for design\"},\n                {id: 3, title: \"JavaScript\", desc: \"JavaScript is for interactive\"},\n            ],\n        };\n    }\n\n    getReadContent() {\n        var i = 0;\n        while (i < this.state.contents.length) {\n            var data = this.state.contents[i];\n            if (data.id === this.state.selected_content_id) {\n                return data;\n                break;\n            }\n            i++;\n        }\n    }\n\n    getContent() {\n        var _title, _desc, _article = null;\n        if (this.state.mode === \"welcome\") {\n            _title = this.state.welcome.title;\n            _desc = this.state.welcome.desc;\n            _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n        } else if (this.state.mode === \"read\") {\n            var _content = this.getReadContent();\n            _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>\n        } else if (this.state.mode === \"create\") {\n            _article = <CreateContent\n                onSubmit={function (_title, _desc) {\n                    //add content to this.state.contents\n                    this.max_content_id = this.max_content_id + 1;\n                    // //위험한 코드. TOC -> shouldComponentUpdate() 에서 비교할때, 원본과 변경값의 차이를 봐야 함.\n                    // // 그래서 원본은 아직 냅두고 원본을 복제한 값을 변경할 값에다 넣고, 렌더링.\n                    // this.state.contents.push(\n                    //     {id: this.max_content_id, title: _title, desc: _desc},\n                    // );\n                    // this.setState({\n                    //     /*App의 this.state.contents 를 바꾸었다 하더라도 setState() 로 바꿔야 함.*/\n                    //     contents: this.state.contents,\n                    // });\n\n                    // //원본은 바꾸지 않는다. immutable.\n                    // var _contents = this.state.contents.concat(\n                    //     {id: this.max_content_id, title: _title, desc: _desc},\n                    // );\n\n                    //이렇게 아예 깊은복사로 복제본을 만들어서 사용해도 됨(원본 안건듬.)\n                    var _contents = Array.from(this.state.contents);\n                    _contents.push(\n                        {id: this.max_content_id, title: _title, desc: _desc},\n                    );\n                    this.setState({\n                        /*App의 this.state.contents 를 바꾸었다 하더라도 setState() 로 바꿔야 함.*/\n                        contents: _contents,\n                    });\n                    console.log(_title, _desc);\n                }.bind(this)}></CreateContent>\n        } else if (this.state.mode === \"update\") {\n            var _content = this.getReadContent();\n            _article = <UpdateContent\n                data={_content}\n                onSubmit={function (_id, _title, _desc) {\n                    var _contents = Array.from(this.state.contents);\n                    var i = 0;\n                    while (i < _contents.length) {\n                        if (_contents[i].id === _id) {\n                            _contents[i] = {\n                                id: _id,\n                                title: _title,\n                                desc: _desc,\n                            };\n                            break;\n                        }\n                        i++;\n                    }\n                    this.setState({\n                        /*App의 this.state.contents 를 바꾸었다 하더라도 setState() 로 바꿔야 함.*/\n                        contents: _contents,\n                    });\n                    console.log(_title, _desc);\n                }.bind(this)}></UpdateContent>\n        }\n\n        return _article;\n    }\n\n\n    /**\n     * props / state 값이 바뀌면 render() 가 호출된다.\n     * -> 화면이 다시그려진다.\n     *\n     * original data (state) 를 바꾸지 말고 (push() 등등.. ), concat() 등등 원본유지하면서\n     * 새로운 데이터를 뱉는 방식으로 작업 해라. -> 원본의 복제본을 수정해서 적용시켜라.\n     *\n     */\n    render() {\n        console.log(\"App.render()\");\n\n        // console.log(\"render\", this);\n        return (\n            <div className=\"App\">\n                {/* <header>\n                    <h1><a href=\"/\"\n                           onClick={function (e) {\n                               // console.log(e);\n                               // debugger;\n                               e.preventDefault();\n                               // alert(\"hi\");\n                               // this.state.mode = \"welcome\";\n                               this.setState({  //setState()로 state를 바꿔줘야 한다.\n                                   mode: \"welcome\",\n                               });\n                           }.bind(this)}\n                    >{this.state.subject.title}</a></h1>\n                    {this.state.subject.sub}\n                </header>*/}\n                <Subject\n                    title={this.state.subject.title}\n                    sub={this.state.subject.sub}\n                    onChangePage={function () {\n                        // alert(\"hihihi\");\n                        this.setState({ //setState()로 state를 바꿔줘야 한다.\n                            mode: \"welcome\",\n                        });\n                    }.bind(this)}\n                ></Subject>\n                {/*<Subject\n                    title=\"WEB by title\"\n                    sub=\"world wide web!!! by sub\"/>*/}\n                {/*<Subject title=\"React by title\" sub=\"for UI by sub\"/>*/}\n\n\n                <TOC\n                    onChangePage1={function (id) {\n                        // alert(\"hi\");\n                        this.setState({\n                            mode: \"read\",\n                            selected_content_id: Number(id),\n                        });\n                    }.bind(this)}\n                    data={this.state.contents}></TOC>\n\n                {/* \"use strict\"; 모드가 기본적으로 있어 일반함수 안에서 this 는 undefined 가 됨.\n                그래서 bind(this) 해주는것.*/}\n                {/*이벤트가 실행되었을때 실행되어야 하는 함수를 Handler라 한다.*/}\n                <Control onChangeMode={function (_mode) {  //핸들러 함수.\n                    if (_mode === \"delete\") {\n                        if (window.confirm(\"Really??\")) {\n                            var _contents = Array.from(this.state.contents);\n                            var i = 0;\n                            while (i < _contents.length) {\n                                if (_contents[i].id === this.state.selected_content_id) {\n                                    _contents.splice(i, 1);\n                                    break;\n                                }\n                                i++;\n                            }\n                            this.setState({\n                                mode: \"welcome\",\n                                contents: _contents,\n                            });\n                            window.alert(\"Deleted!!\");\n                        }\n                    } else {\n                        this.setState({\n                            mode: _mode,\n                        });\n                    }\n\n                }.bind(this)}></Control>\n\n                {this.getContent()}\n                {/*<Content\n                    title=\"HTML by title\"\n                    desc=\"HTML is HyperText Markup Language. by desc.\"/>*/}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/Control.js",[],"/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/Subject.js",[],"/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/App2.js",["41"],"/Users/yang-mac/Desktop/dev/react-study-git/react-app/src/component/ReadContent.js",[],{"ruleId":"42","severity":1,"message":"43","line":39,"column":17,"nodeType":"44","messageId":"45","endLine":39,"endColumn":23},{"ruleId":"46","severity":1,"message":"47","line":86,"column":17,"nodeType":"48","messageId":"49","endLine":86,"endColumn":25},{"ruleId":"50","severity":1,"message":"51","line":82,"column":8,"nodeType":"52","endLine":82,"endColumn":10,"suggestions":"53"},"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-redeclare","'_content' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'number'. Either include it or remove the dependency array.","ArrayExpression",["54"],{"desc":"55","fix":"56"},"Update the dependencies array to be: [number]",{"range":"57","text":"58"},[2864,2866],"[number]"]